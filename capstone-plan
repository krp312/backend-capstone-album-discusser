----------------------
user stories and flows
----------------------
as a user i'd like to
  tag/comment/rate albums
    tagging albums
      1. user goes to album page. if album page isn't there, create one
      3. user clicks a tag from available list
      4. tag updates +1, max 1 vote per tag
      5. vote value updates in dom
    rating albums
      1. user goes to album page. if album page isn't there, create one
      2. user clicks a rating from a list of 1 to 5
      3. rating updates by 1, max 1 vote
      4. vote value is an average
    commenting albums
      1. user goes to album page. if album isn't there, create one
      2. user types a comment in a field box, clicks submit
      3. the comment and the album id, together, are stored in the user's document in an object
      4. the album page will update by searching all the users collection where the ID is the same as the album id
        * use a virtual to assemble these comments with the user's ID, so only that user can edit it later
      5. list comments by date
  CRUD *only* my comments and not other users
    from user view
      1. login as a registered user
      2. display my comments as a list
      3. to edit, PUT endpoint to the index (bc it's in an array)
    from album view
      1. login
      2. look at all the comments (which should be displayed by username). grab the comment by searching the users collection by date created?
  have my own account
    1. enter in credentials
    2. create new user in users collection with hashed password

as an admin i'd like to
  edit album properties
    1. login
    2. go to an album
    3. PUT on any/all fields, maybe using a .save()?
  delete users
    1. login
    2. see users
    3. delete

-----------------------------
technical goals, among others
-----------------------------
dev and prod dbs
use router
how to seed db properly
front end code
testing
router
CORS
error handling!
'*' endpoint
.populate?
.save on actual document, not instance
search and sort
how auth is going match?

------------
daily pacing
------------
mon - CI
tues/wed - core features, testing
thurs - code review
thurs aft/fri morning - prep for demo, polish, documentation

"Music Club"

fetch album metadata from an api
  autocomplete (1/2 a day)
  keep or edit
  or go through node app, saves to my database?

----------
data model
----------
{
  name: 'DAMN.'
  id: 1a2s3ed3f
  artist: 'Kendrick Lamar"
  year: 2017
  tags: {
    'hip hop': 1, // user sees list of tags -> selects a tag, can vote only once -> updates value in the album doc
    'rap rock': 2,
    'country': 48234
  },
  ratings: {
    'one': 1,
    'two': 2,
    'three': 1,
    'four': 0,
    'five': 48234
  }
}

{
  username:
  password:
  id: 2$6786dasds6&*4#@
  firstName:
  lastName:
  comments: [
    {
      albumId: '1a2s3d4f'
      date created:
      comment: 'lorem ipsum...'
    }
  ]
}